[build-system]
requires = ["poetry>=1.5.1"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "fast-micro-service"
version = "1.0.0a1"
description = "FastApi Start Kit"
authors = ["phoenix <hypofiasco@gmail.com>"]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.9.0,<3.12"
fastapi = "0.111.0"
python-multipart = "0.0.9"
starlette-context = "0.3.6"
pydantic-settings = "2.3.2"
orjson = "3.10.4"
httpx = "0.27.0"
pycryptodomex = "3.20.0"
passlib = "1.7.4"
bcrypt = "4.0.1"
gunicorn = "22.0.0"
uvicorn = { extras = ["standard"], version = "0.30.1" }
tortoise-orm = { extras = ["aiomysql"], version = "0.21.3" }
aerich = "0.7.2"
pyinstrument = "4.6.0"
redis = "5.0.5"
redis-om = "0.3.1"
cachetools = "5.3.3"
loguru = "0.7.2"
# python-ulid = "2.6.0"

ipython = {version = "8.15.0", optional = true }
sentry-sdk = { extras = ["fastapi"], version = "2.5.1", optional = true }


[tool.poetry.extras]
ipython = ["ipython"]
sentry = ["sentry-sdk"]


[tool.poetry.dev-dependencies]
# poetry install --no-dev
urllib3 = "2.2.1"
pytest-asyncio = "0.21.0"
black = "23.1.0"
isort = "5.12.0"
ruff = "0.0.270"          # code check
freezegun = "1.2.1"       # datetime freeze test
httpretty = "1.1.4"       # tcp level mock request data
factory-boy = "3.2.1"     # fake data generate
hypothesis = "6.74.0"     # roperty-based tests, range fake data generate cases
mimesis = "10.1.0"        # fake data generate
py-spy = "0.3.14"         # profile
mypy = "1.4.1"


# [[tool.poetry.source]]
# name = "burnish"
# url = "http://192.168.3.59:8082/simple/"
# priority = "primary"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[tool.isort]
atomic = true
profile = "black"
use_parentheses = true
ensure_newline_before_comments = true


[tool.black]
line-length = 118
target-version = ["py311"]


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "UP", # pyupgrade
    # "D",   # pydocstyle
    "B",     # flake8-bugbear
    "ANN",   # annotation
    "ASYNC",
    "COM",
    "C4",
    "DTZ",   # datetime zoneinfo
    "T10",
    "EXE",
    "ISC",
    "ICN",
    "G",
    "PIE",
    "Q",
    "RSE",
    "RET",
    "SIM",   # simplify code
    "TID",
    "TD",
    "PD",
    "PLC",
    "PLE",
    "PLW",
    "FLY",
    "NPY",
]
ignore = [
    "B008",   # function call in argument defaults, like Query, Depends. need ignore
    "ANN101", # type annotation for self/cls
    "ANN102", # type annotation for cls in classmethod
    "ANN002", # annotation for args
    "ANN003", # annotation for kwargs
]
# file ignore -> # ruff: noqa
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "storages/relational/migrate/versions/",
    "tests",
]
per-file-ignores = {}
line-length = 120
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py311"


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
python_version = "3.11"
platform = "darwin"
plugins = ["pydantic.mypy"]
warn_return_any = true
warn_unused_configs = true
exclude = ["static", "tests"]

follow_imports = "silent"
warn_redundant_casts = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true # ignore not supported typed
show_absolute_path = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.aerich]
tortoise_orm = "storages.relational.migrate.env.TORTOISE_ORM_CONFIG"
location = "storages/relational/migrate"
src_folder = "./."
